# 命名空间
apiVersion: v1
kind: Namespace
metadata:
  name: llm-web
  namespace: llm-web
  labels:
    name: llm-web-v1
# 本地存储 StorageClass
# StorageClass是pv资源的管理器
# 当provisioner不是no-provisioner时，StorageClass会根据定义的规则动态创建/销毁pv
# 当provisioner是no-provisioner时，需手动管理pv（即手动定义pv）
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner  # 本地存储需手动管理
volumeBindingMode: WaitForFirstConsumer   # 延迟绑定至 Pod 调度
---
# k8s pv（存储卷） & pvc（存储卷声明）：pod内挂载外部存储
# pv与pvc：pv是指pod需挂载的物理存储，pvc是定义pod如何使用pv
# 1. emptyDir：用于临时存储的空目录，与pod绑定；pod挂掉后重启不会丢失数据，但pod被删除后会永久丢失数据
# 2. hostPath：将Node（pod运行所在的物理机器）中的文件系统挂载到pod内，与Node绑定；无法跨Node共享文件
# 3. NFS（Network File System）：挂载远程存储到pod内，文件内容就可以通过远程存储跨Node共享了
# gateway 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gateway-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce                      #访问模式，该pv可以被单个节点以读/写模式挂载
  persistentVolumeReclaimPolicy: Retain  #回收策略，Retain（保留），表示手动回收
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/gateway  # 本地机器的路径
  nodeAffinity:         # 节点亲和性：根据节点的标签（labels）来指定 Pod 应该或倾向于调度到哪些节点上
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop # k8snode名称
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gateway-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: gateway-pv
---
# usercenter 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: usercenter-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/usercenter
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: usercenter-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: usercenter-pv
---
# accessor 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: accessor-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/accessor
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: accessor-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: accessor-pv
---
# tokenizer 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tokenizer-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/tokenizer
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tokenizer-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: tokenizer-pv
---
# online-inference 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: online-inference-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/online_inference
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: online-inference-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: online-inference-pv
---
# batch-inference 存储
apiVersion: v1
kind: PersistentVolume
metadata:
  name: batch-inference-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/app/batch_inference
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: batch-inference-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: batch-inference-pv
# MySQL PersistentVolume
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/mysql
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
---
# MySQL PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: mysql-pv
---
# Redis PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/redis
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
---
# Redis PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: redis-pv
---
# Kafka PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
spec:
  capacity:
    storage: 5Gi  # Kafka需要更多存储空间
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/kafka
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
---
# Kafka PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      pv: kafka-pv
---
# MongoDB PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /run/desktop/mnt/host/c/Users/19373/Documents/k8sdata/mongo
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
---
# MongoDB PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: llm-web
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  selector:
    matchLabels:
      pv: mongo-pv